# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build fonts

on:
  workflow_dispatch:
    inputs:
      task-prefix:
        description: "Task prefix to run (see build-fonts.sh)"
        required: false
        default: "ttf"

jobs:
  build-pro:
    name: build-vardanpro
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: |
          echo "$(git tag --sort='-authordate' | head -n1)"
          export FONT_VERSION="$(git tag --sort='-authordate' | head -n1)"-${{ github.run_number }}
          echo "FONT_VERSION=$FONT_VERSION" >> $GITHUB_ENV
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "15"
      - name: ttfautohint
        run: sudo apt-get install -y ttfautohint
      - run: npm install
      - name: generate private config
        run: node generate-private-plans.js 2>plans-to-build.txt | tee private-build-plans.toml
      - name: patching libs
        run: |
          patch -p0 --binary < session.patch
      - name: set envs
        run: |
          export DIST_FONT_NAME="vardanpro"
          echo "DIST_FONT_NAME=$DIST_FONT_NAME" >> $GITHUB_ENV
          echo ${{ env.DIST_FONT_NAME }} ${{ env.VERSION }}
      - name: Building fonts
        run: ./build-fonts.sh '${{ github.event.inputs.task-prefix }}::.*vardanpro-?(monaco|ubuntu|lucida)?(-style)?$'
      - name: upload build logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: build-logs
          path: .build/
      - name: upload fonts
        uses: actions/upload-artifact@v2
        with:
          name: dist-fonts-${{ env.DIST_FONT_NAME }}-${{ env.FONT_VERSION }}
          path: |
            dist/
  build-term:
    name: build-vardanpro-term
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: |
          echo "$(git tag --sort='-authordate' | head -n1)"
          export FONT_VERSION="$(git tag --sort='-authordate' | head -n1)"-${{ github.run_number }}
          echo "FONT_VERSION=$FONT_VERSION" >> $GITHUB_ENV
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "15"
      - name: ttfautohint
        run: sudo apt-get install -y ttfautohint
      - run: npm install
      - name: generate private config
        run: node generate-private-plans.js 2>plans-to-build.txt | tee private-build-plans.toml
      - name: patching libs
        run: |
          patch -p0 --binary < session.patch
      - name: set envs
        run: |
          export DIST_FONT_NAME="vardanpro-term"
          echo "DIST_FONT_NAME=$DIST_FONT_NAME" >> $GITHUB_ENV
          echo $DIST_FONT_NAME $VERSION
      - name: Building fonts
        run: ./build-fonts.sh '${{ github.event.inputs.task-prefix }}::.*vardanpro-term-?(monaco|ubuntu|lucida)?(-style)?$'
      - name: upload build logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: build-logs
          path: .build/
      - name: upload fonts
        uses: actions/upload-artifact@v2
        with:
          name: dist-fonts-${{ env.DIST_FONT_NAME }}-${{ env.FONT_VERSION }}
          path: |
            dist/
  build-light:
    name: build-vardanpro-light
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: |
          echo "$(git tag --sort='-authordate' | head -n1)"
          export FONT_VERSION="$(git tag --sort='-authordate' | head -n1)"-${{ github.run_number }}
          echo "FONT_VERSION=$FONT_VERSION" >> $GITHUB_ENV
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "15"
      - name: ttfautohint
        run: sudo apt-get install -y ttfautohint
      - run: npm install
      - name: generate private config
        run: node generate-private-plans.js 2>plans-to-build.txt | tee private-build-plans.toml
      - name: patching libs
        run: |
          patch -p0 --binary < session.patch
      - name: set envs
        run: |
          export DIST_FONT_NAME="vardanpro-light"
          echo "DIST_FONT_NAME=$DIST_FONT_NAME" >> $GITHUB_ENV
          echo $DIST_FONT_NAME $VERSION
      - name: Building fonts
        run: ./build-fonts.sh '${{ github.event.inputs.task-prefix }}::.*vardanpro.*-light?$'
      - name: upload build logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: build-logs
          path: .build/
      - name: upload fonts
        uses: actions/upload-artifact@v2
        with:
          name: dist-fonts-${{ env.DIST_FONT_NAME }}-${{ env.FONT_VERSION }}
          path: |
            dist/
