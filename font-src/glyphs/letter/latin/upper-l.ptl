$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from '../../../support/utils'
import [DesignParameters] from '../../../meta/aesthetics'
import [Dotless CvDecompose] from "../../../support/gr"

glyph-module

glyph-block Letter-Latin-Upper-L : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Marks : markMiddle aboveMarkBot aboveMarkTop
	glyph-block-import Letter-Blackboard : BBS BBD

	define LBarLeftX : SB * 1.5
	define [LShape top sgr] : glyph-proc
		include : VBarLeft LBarLeftX 0 top
		include : HBarBottom (LBarLeftX - O) (RightSB - OX) 0
		if (sgr > 1) : begin
			include : LeftwardBottomSerif (LBarLeftX) 0 SideJut
			include : LeftwardTopSerif (LBarLeftX + HVContrast * HalfStroke) top Jut
			include : RightwardTopSerif (LBarLeftX + HVContrast * HalfStroke) top MidJutSide
		if (sgr > 0) : include : UpwardRightSerif (RightSB - OX) 0 VJut

	create-glyph 'L.standard' : glyph-proc
		include : MarkSet.capital
		include : LShape CAP [if SLAB 2 0]

	create-glyph 'L.motionSerifed' : glyph-proc
		include : MarkSet.capital
		include : LShape CAP 1

	create-glyph 'smcpL.standard' : glyph-proc
		include : MarkSet.e
		include : LShape XH [if SLAB 2 0]

	create-glyph 'smcpL.motionSerifed' : glyph-proc
		include : MarkSet.e
		include : LShape XH 1

	select-variant 'L' 'L'
	select-variant 'smcpL' 0x29F (follow -- 'L')

	create-glyph 'mathbb/L' 0x1D543 : glyph-proc
		include : MarkSet.capital
		include : VBarLeft LBarLeftX 0 CAP BBS
		include : HBarBottom (LBarLeftX - O) (RightSB - OX) 0 BBS
		include : VBarLeft (LBarLeftX + BBD) 0 CAP BBS
		include : HBarTop LBarLeftX (LBarLeftX + BBD) CAP BBS

	turned 'turnL' 0xA780 'L' Middle (CAP / 2)

	with-related-glyphs 'Lcaron' 0x13D 'L' : lambda [src sel] : glyph-proc
		include : WithTransform [Translate (Width + (RightSB - SB) * 0.375) 0]
			refer-glyph "commaAbove"
		include [refer-glyph src] AS_BASE ALSO_METRICS

	with-related-glyphs 'Lslash' 0x141 'L' : lambda [src sel] : glyph-proc
		include [refer-glyph src] AS_BASE ALSO_METRICS
		local fine : 0.5 * OverlayStroke
		local middle : mix Stroke CAP 0.5
		include : dispiro
			flat [mix 0 SB 0.5] (middle - LongJut * 0.4) [widths fine fine]
			curl (1.6 * LongJut + [mix 0 SB 0.5]) (middle + LongJut * 0.4)

	with-related-glyphs 'LTildeOver' 0x2C62 'L' : lambda [src sel] : glyph-proc
		include [refer-glyph src] AS_BASE ALSO_METRICS
		include : new-glyph : glyph-proc
			include : refer-glyph "tildeAboveOverlay"
			include : ApparentTranslate (SB * 1.5 + Stroke * HVContrast / 2 - markMiddle) (CAP * 0.525 - [mix aboveMarkBot aboveMarkTop 0.5])

	with-related-glyphs 'Ldot' 0x13F 'L' : lambda [src sel] : glyph-proc
		include [refer-glyph src] AS_BASE
		include : Ring ([mix Stroke CAP 0.5] + DotRadius) ([mix Stroke CAP 0.5] - DotRadius) ([mix SB RightSB 0.65] - DotRadius) ([mix SB RightSB 0.65] + DotRadius)

	with-related-glyphs 'Lbar' 0x23D 'L' : lambda [src sel] : glyph-proc
		include [refer-glyph src] AS_BASE
		include : HOverlayBar (SB * 0.3) [mix (SB + Stroke) (RightSB - Stroke) 0.55] (CAP * OverlayPos)