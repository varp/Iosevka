$$include '../../../meta/macros.ptl'

import [mix barmixL linreg clamp fallback] from '../../../support/utils'
import [DesignParameters] from '../../../meta/aesthetics'

glyph-module

glyph-block Letter-Greek-Lower-Epsilon : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared-Shapes : SerifedArcStart_RtlLhs SerifedArcStart_LtrRhs
	glyph-block-import Letter-Shared-Shapes : InwardSlabArcStart_RtlLhs InwardSlabArcStart_LtrRhs
	glyph-block-import Letter-Shared-Shapes : ArcStartSerifL ArcStartSerifR DToothlessRise
	glyph-block-import Letter-Shared-Shapes : ArcStartInwardSerifL ArcStartInwardSerifR

	define SLAB-NONE       0
	define SLAB-CLASSICAL  1
	define SLAB-INWARD     2

	define StdBlend 0.65

	define [SmallEpsilonShapeDim top bot blend] : begin
		local stroke : AdviceStroke2 2 3 (top - bot)
		local midx : mix SB RightSB blend
		local midy : mix bot top OverlayPos
		local topHeight : top - bot
		local midyHeight : midy - bot
		local sma : topHeight - [mix (midyHeight + stroke / 2) (topHeight - O - stroke) (SmoothB / (SmoothA + SmoothB))] - TanSlope * HVContrast * stroke
		local smb : [mix (stroke + O) (midyHeight - stroke / 2) (SmoothB / (SmoothA + SmoothB))] + TanSlope * HVContrast * stroke
		local fine : stroke * CThin
		return : object stroke midx midy sma smb fine

	define [SmallEpsilonUpperShape slabType top bot blend hook] : begin
		define [object stroke midx midy sma smb fine] : SmallEpsilonShapeDim top bot blend
		return : dispiro
			match slabType
				[Just SLAB-CLASSICAL] : SerifedArcStart_RtlLhs RightSB Middle top stroke hook
				[Just SLAB-INWARD] : InwardSlabArcStart_RtlLhs RightSB Middle top stroke hook
				__ : list [g4 (RightSB + O) (top - hook) [widths.lhs]] [hookstart (top - O)]
			g4 (SB + (OX - O)) (top - sma)
			arcvh
			flat Middle (midy - (fine - stroke / 2)) [widths.heading fine 0 Rightward]
			curl midx (midy - (fine - stroke / 2)) [heading Rightward]

	define [SmallEpsilonLowerShape slabType top bot blend hook] : begin
		define [object stroke midx midy sma smb fine] : SmallEpsilonShapeDim top bot blend
		return : dispiro
			flat midx (midy + (fine - stroke / 2)) [widths.heading fine 0 Leftward]
			curl Middle (midy + (fine - stroke / 2)) [heading Leftward]
			archv
			g4 (SB + (OX - O) + O * 2) (bot + smb) [widths.lhs]
			hookend (bot + O)
			g4 (RightSB - O) (bot + hook)

	define [SmallEpsilonShape slabType top bot blend hook] : union
		SmallEpsilonUpperShape slabType top bot blend hook
		SmallEpsilonLowerShape slabType top bot blend hook

	define [AutoStartSerifR sty top] : match sty
		[Just SLAB-CLASSICAL] : ArcStartSerifR RightSB top Stroke Hook
		[Just SLAB-INWARD]    : ArcStartInwardSerifR RightSB top Stroke Hook
		__ : glyph-proc

	define [CyrZeShapeDim top bot blend] : begin
		local stroke : AdviceStroke2 2 3 (top - bot)
		local midx : mix RightSB SB blend
		local midy : mix bot top OverlayPos
		local topHeight : top - bot
		local midyHeight : midy - bot
		local smb : topHeight - [mix (midyHeight + stroke / 2) (topHeight - O - stroke) (SmoothA / (SmoothA + SmoothB))] + TanSlope * HVContrast * stroke
		local sma : [mix (stroke + O) (midyHeight - stroke / 2) (SmoothA / (SmoothA + SmoothB))] - TanSlope * HVContrast * stroke
		local fine : stroke * CThin
		return : object stroke midx midy sma smb fine

	define [CyrZeUpperShape slabType top bot blend hook] : begin
		define [object stroke midx midy sma smb fine] : CyrZeShapeDim top bot blend
		return : dispiro
			match slabType
				[Just SLAB-CLASSICAL] : SerifedArcStart_LtrRhs SB Middle top stroke hook
				[Just SLAB-INWARD] : InwardSlabArcStart_LtrRhs SB Middle top stroke hook
				__ : list [g4 (SB - O) (top - hook) : widths.rhs] [hookstart (top - O)]
			g4 (RightSB - (OX - O)) (top - smb)
			arcvh
			flat Middle (midy - (fine - stroke / 2)) [widths.heading 0 fine Leftward]
			curl midx (midy - (fine - stroke / 2)) [heading Leftward]

	define [CyrZeLowerShape slabType top bot blend hook] : begin
		define [object stroke midx midy sma smb fine] : CyrZeShapeDim top bot blend
		return : dispiro
			g4 (SB + O) (bot + hook) [widths.lhs]
			hookstart (bot + O)
			g4 (RightSB - (OX - O) - O * 2) (bot + sma)
			arcvh
			flat Middle (midy + (fine - stroke / 2)) [widths.heading fine 0 Leftward]
			curl midx (midy + (fine - stroke / 2)) [heading Leftward]

	define [CyrZeShape slabType top bot blend hook] : union
		CyrZeUpperShape slabType top bot blend hook
		CyrZeLowerShape slabType top bot blend hook

	define [AutoStartSerifL sty top] : match sty
		[Just SLAB-CLASSICAL] : ArcStartSerifL SB top Stroke Hook
		[Just SLAB-INWARD]    : ArcStartInwardSerifL SB top Stroke Hook
		__ : glyph-proc

	define EpsilonConfig : object
		serifless     { SLAB-NONE      }
		serifed       { SLAB-CLASSICAL }
		inwardSerifed { SLAB-INWARD    }

	foreach { suffix { slabType } } [Object.entries EpsilonConfig] : do
		create-glyph "latn/Epsilon.\(suffix)" : glyph-proc
			include : MarkSet.capital
			include : SmallEpsilonShape slabType CAP 0 StdBlend Hook
			include : AutoStartSerifR slabType CAP

		create-glyph "latn/epsilon.\(suffix)" : glyph-proc
			include : MarkSet.e
			include : SmallEpsilonShape slabType XH 0 StdBlend SHook
			include : AutoStartSerifR slabType XH

		create-glyph "cyrl/Ze.\(suffix)" : glyph-proc
			include : MarkSet.capital
			include : CyrZeShape slabType CAP 0 StdBlend Hook
			include : AutoStartSerifL slabType CAP

		create-glyph "cyrl/ze.\(suffix)" : glyph-proc
			include : MarkSet.e
			include : CyrZeShape slabType XH 0 StdBlend SHook
			include : AutoStartSerifL slabType XH

		create-glyph "cyrl/ze.BGR.\(suffix)" : glyph-proc
			include : MarkSet.p
			include : CyrZeShape slabType XH Descender StdBlend SHook
			include : AutoStartSerifL slabType XH

	alias 'grek/epsilon' 0x3B5 'latn/epsilon.serifless'
	select-variant 'latn/Epsilon' 0x190
	select-variant 'latn/epsilon' 0x25B
	turned 'turnepsilon' 0x1D08 'grek/epsilon' Middle (XH / 2)

	select-variant 'cyrl/Ze' 0x417
	select-variant 'cyrl/ze' 0x437
	select-variant 'cyrl/ze.BGR' (follow -- 'cyrl/ze')
	alias 'latn/revSmallEpsilon' 0x25C 'cyrl/ze'

	create-glyph 'voicedlaryngenalspirant' 0x1D24 : glyph-proc
		include : MarkSet.b
		local blend 0.505
		local midGap : Math.max [AdviceStroke2 3 12 CAP] (CAP / 8 - [AdviceStroke2 3 6 XH])
		local strokeV : AdviceStroke 4
		local dimUpper : CyrZeShapeDim         CAP            midGap blend
		local dimLower : SmallEpsilonShapeDim  (CAP - midGap) 0      blend
		include : union
			CyrZeUpperShape        SLAB-NONE  CAP            midGap blend Hook
			SmallEpsilonLowerShape SLAB-NONE (CAP - midGap) 0      blend Hook
			Rect (dimUpper.midy + dimUpper.stroke / 2) (dimLower.midy - dimLower.stroke / 2) (Middle - strokeV / 2 * HVContrast) (Middle + strokeV / 2 * HVContrast)
